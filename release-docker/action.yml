name: "release-docker"
description: "Publish docker image of REANA component"
inputs:
  component:
    description: "Component name"
    required: false
    default: ${{ github.event.repository.name }}
  organisation:
    description: "Name of the organisation to be used in the image tag"
    required: false
  registry:
    description: "Docker registry"
    required: false
    default: "registry.cern.ch"
  image-name:
    description: "Custom image name"
    required: false
  build-args:
    description: "Custom build arguments"
    required: false
  platform:
    description: "Platforms for multi-arch images"
    required: false
  username:
    description: "Username for authenticating to registry"
    required: true
  token:
    description: "Token for authenticating to registry"
    required: true
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        path: ${{ inputs.component }}

    - name: Checkout reanahub/reana
      uses: actions/checkout@v3
      with:
        repository: reanahub/reana
        path: reana

    - name: Setup QEMU
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-user-static
      shell: bash

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install ./reana
      shell: bash

    - name: Log in to Docker registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.username }}
        password: ${{ inputs.token }}

    - name: Build Docker images
      env:
        INPUT_BUILD_ARGS: ${{ inputs.build-args }}
        INPUT_COMPONENT: ${{ inputs.component }}
        INPUT_ORGANISATION: ${{ inputs.organisation }}
        INPUT_PLATFORM: ${{ inputs.platform }}
        INPUT_USERNAME: ${{ inputs.username }}
      run: |
        IFS=$'\n'
        # Split build args on newline
        SPLIT_BUILD_ARGS=($INPUT_BUILD_ARGS)
        # Split platform on newline
        SPLIT_PLATFORM=($INPUT_PLATFORM)
        unset IFS

        EXTRA_ARGS=()
        for arg in "${SPLIT_BUILD_ARGS[@]}"; do
          EXTRA_ARGS+=(--build-arg "$arg")
        done
        for platform in "${SPLIT_PLATFORM[@]}"; do
          EXTRA_ARGS+=(--platform "$platform")
        done

        reana-dev git-clean -c "$INPUT_COMPONENT"
        reana-dev docker-build -c "$INPUT_COMPONENT" \
          --user "${INPUT_ORGANISATION:-$INPUT_USERNAME}" \
          "${EXTRA_ARGS[@]}"
      shell: bash

    - name: Release Docker images
      env:
        INPUT_COMPONENT: ${{ inputs.component }}
        INPUT_IMAGE_NAME: ${{ inputs.image-name }}
        INPUT_ORGANISATION: ${{ inputs.organisation }}
        INPUT_PLATFORM: ${{ inputs.platform }}
        INPUT_REGISTRY: ${{ inputs.registry }}
        INPUT_USERNAME: ${{ inputs.username }}
      run: |
        IFS=$'\n'
        # Split platform on newline
        SPLIT_PLATFORM=($INPUT_PLATFORM)
        unset IFS

        EXTRA_ARGS=()
        for platform in "${SPLIT_PLATFORM[@]}"; do
          EXTRA_ARGS+=(--platform "$platform")
        done

        reana-dev release-docker -c "$INPUT_COMPONENT" \
          --user "${INPUT_ORGANISATION:-$INPUT_USERNAME}" \
          --registry "$INPUT_REGISTRY" \
          ${INPUT_IMAGE_NAME:+--image-name "$INPUT_IMAGE_NAME"} \
          "${EXTRA_ARGS[@]}"
      shell: bash
